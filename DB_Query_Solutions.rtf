{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch12\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1042{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f12\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Batang{\*\falt \'b9\'d9\'c5\'c1};}{\f37\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Batang;}
{\f40\froman\fcharset238\fprq2 Times New Roman CE;}{\f41\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f43\froman\fcharset161\fprq2 Times New Roman Greek;}{\f44\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f45\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f46\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f47\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f48\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\f60\fmodern\fcharset238\fprq1 Courier New CE;}{\f61\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f63\fmodern\fcharset161\fprq1 Courier New Greek;}{\f64\fmodern\fcharset162\fprq1 Courier New Tur;}{\f65\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f66\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f67\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f68\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f162\froman\fcharset0\fprq2 Batang Western{\*\falt \'b9\'d9\'c5\'c1};}
{\f160\froman\fcharset238\fprq2 Batang CE{\*\falt \'b9\'d9\'c5\'c1};}{\f161\froman\fcharset204\fprq2 Batang Cyr{\*\falt \'b9\'d9\'c5\'c1};}{\f163\froman\fcharset161\fprq2 Batang Greek{\*\falt \'b9\'d9\'c5\'c1};}
{\f164\froman\fcharset162\fprq2 Batang Tur{\*\falt \'b9\'d9\'c5\'c1};}{\f167\froman\fcharset186\fprq2 Batang Baltic{\*\falt \'b9\'d9\'c5\'c1};}{\f412\froman\fcharset0\fprq2 @Batang Western;}{\f410\froman\fcharset238\fprq2 @Batang CE;}
{\f411\froman\fcharset204\fprq2 @Batang Cyr;}{\f413\froman\fcharset161\fprq2 @Batang Greek;}{\f414\froman\fcharset162\fprq2 @Batang Tur;}{\f417\froman\fcharset186\fprq2 @Batang Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1042\loch\f0\hich\af0\dbch\af12\cgrid\langnp1033\langfenp1042 \snext0 
Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid15033042}{\*\generator Micr
osoft Word 11.0.6568;}{\info{\title /* Welcome to the SQL mini project}{\author admin}{\operator admin}{\creatim\yr2020\mo8\dy3\min59}{\revtim\yr2020\mo8\dy3\min59}{\version2}{\edmins4}{\nofpages6}{\nofwords1049}{\nofchars5981}{\*\company <egyptian hak>}
{\nofcharsws7016}{\vern24579}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale150\nolnhtadjtbl\rsidroot15033042 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1042\loch\af0\hich\af0\dbch\af12\cgrid\langnp1033\langfenp1042 {\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 
/* Welcome to the SQL mini project. You will carry out this project partly in
\par \hich\af2\dbch\af12\loch\f2 the PHPMyAdmin interface, and partly in Jupyter via a Python connection.
\par 
\par \hich\af2\dbch\af12\loch\f2 This is Tier 1 of the case study, which means that there'll be more guidance for you about how to 
\par \hich\af2\dbch\af12\loch\f2 setup your local SQLite connection in PART 2 of the case study. 
\par 
\par \hich\af2\dbch\af12\loch\f2 The questions in the case study are exactly the same as with Tier 2. 
\par 
\par \hich\af2\dbch\af12\loch\f2 PART 1: PHPMyAdmin
\par \hich\af2\dbch\af12\loch\f2 You will complete questions 1-9 below in the PHPMyAdmin interface. 
\par \hich\af2\dbch\af12\loch\f2 Log in by pasting the following \hich\af2\dbch\af12\loch\f2 URL into your browser, and
\par \hich\af2\dbch\af12\loch\f2 using the following Username and Password:
\par 
\par \hich\af2\dbch\af12\loch\f2 URL: }{\field{\*\fldinst {\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 HYPERLINK https://sql.springboard.com/ }{
\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042\charrsid15033042 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b52000000680074007400700073003a002f002f00730071006c002e0073007000720069006e00670062006f006100720064002e0063006f006d002f000000795881f43b1d7f48af2c825dc485276300000000a5ab0000}
}}{\fldrslt {\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 https://sql.springboard.com/}}}{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 Username: student
\par \hich\af2\dbch\af12\loch\f2 Password: learn_sql@springboard
\par 
\par \hich\af2\dbch\af12\loch\f2 The data you need is in the "country_club" database. This \hich\af2\dbch\af12\loch\f2 database
\par \hich\af2\dbch\af12\loch\f2 contains 3 tables:
\par \hich\af2\dbch\af12\loch\f2     i) the "Bookings" table,
\par \hich\af2\dbch\af12\loch\f2     ii) the "Facilities" table, and
\par \hich\af2\dbch\af12\loch\f2     iii) the "Members" table.
\par 
\par \hich\af2\dbch\af12\loch\f2 In this case study, you'll be asked a series of questions. You can
\par \hich\af2\dbch\af12\loch\f2 solve them using the platform, but for the final deliverable,
\par \hich\af2\dbch\af12\loch\f2 pas\hich\af2\dbch\af12\loch\f2 te the code for each solution into this script, and upload it
\par \hich\af2\dbch\af12\loch\f2 to your GitHub.
\par 
\par \hich\af2\dbch\af12\loch\f2 Before starting with the questions, feel free to take your time,
\par \hich\af2\dbch\af12\loch\f2 exploring the data, and getting acquainted with the 3 tables. */
\par 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* QUESTIONS 
\par \hich\af2\dbch\af12\loch\f2 /* Q1: Some of the facilities charge a fee to members, but some do not.
\par \hich\af2\dbch\af12\loch\f2 Write a SQL query to produce a list of the names of the facilities that do. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output}{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT name
\par \hich\af2\dbch\af12\loch\f2 FROM Facilities
\par \hich\af2\dbch\af12\loch\f2 WHERE membercost !=0
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 /* Q2: How many facilities do not charge a fee to members? */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT COUNT( * )
\par \hich\af2\dbch\af12\loch\f2 FROM Facilities
\par \hich\af2\dbch\af12\loch\f2 WHERE membercost =0
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* Q3: Write an SQL query to show a list of facilities that charge a fee to members,
\par \hich\af2\dbch\af12\loch\f2 where the fee is less than 20% of the facili\hich\af2\dbch\af12\loch\f2 ty's monthly maintenance cost.
\par \hich\af2\dbch\af12\loch\f2 Return the facid, facility name, member cost, and monthly maintenance of the
\par \hich\af2\dbch\af12\loch\f2 facilities in question. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT facid, name, membercost, monthlymaintenance
\par \hich\af2\dbch\af12\loch\f2 from Facilities
\par \hich\af2\dbch\af12\loch\f2 where membercost > 0 and membercost < 0.2 *  monthlymaintenance
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 
\par 
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 /* Q4: Write an SQL query to retrieve the details of facilities with ID 1 and 5.
\par \hich\af2\dbch\af12\loch\f2 Try writing the query without using the OR operator. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 select *
\par \hich\af2\dbch\af12\loch\f2 from Facilities
\par \hich\af2\dbch\af12\loch\f2 where facid IN (1,5\hich\af2\dbch\af12\loch\f2 )
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 /* Q5: Produce a list of facilities, with each labelled as
\par \hich\af2\dbch\af12\loch\f2 'cheap' or 'expensive', depending on if their monthly maintenance cost is
\par \hich\af2\dbch\af12\loch\f2 more than $100. Return the name and monthly maintenance of the facilities
\par \hich\af2\dbch\af12\loch\f2 in question. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT name, (
\par \hich\af2\dbch\af12\loch\f2 CASE W\hich\af2\dbch\af12\loch\f2 HEN monthlymaintenance <100
\par \hich\af2\dbch\af12\loch\f2 THEN 'cheap'
\par \hich\af2\dbch\af12\loch\f2 ELSE 'expensive'
\par \hich\af2\dbch\af12\loch\f2 END
\par \hich\af2\dbch\af12\loch\f2 ) AS maintenance
\par \hich\af2\dbch\af12\loch\f2 FROM Facilities
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* Q6: You'd like to get the first and last name of the last member(s)
\par \hich\af2\dbch\af12\loch\f2 who signed up. Try not to use the LIMIT clause for your solution. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT firstname, surname
\par \hich\af2\dbch\af12\loch\f2 FROM `Members`
\par \hich\af2\dbch\af12\loch\f2 WHERE joindate = (
\par \hich\af2\dbch\af12\loch\f2 SELECT MAX( joindate )
\par \hich\af2\dbch\af12\loch\f2 FROM `Members` )
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 /* Q7: Produce a list of all members who have used a tennis court.
\par \hich\af2\dbch\af12\loch\f2 Include in your output the name of the court, and the name of the member
\par \hich\af2\dbch\af12\loch\f2 formatted as a \hich\af2\dbch\af12\loch\f2 single column. Ensure no duplicate data, and order by
\par \hich\af2\dbch\af12\loch\f2 the member name. */
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 Output
\par 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT DISTINCT CONCAT( M.firstname, ' ', M.surname), F.name  AS Mem_And_Court_Names
\par \hich\af2\dbch\af12\loch\f2 FROM Members M
\par \hich\af2\dbch\af12\loch\f2 LEFT JOIN Bookings B ON M.memid = B.memid
\par \hich\af2\dbch\af12\loch\f2 LEFT JOIN Facilities F ON F.fac\hich\af2\dbch\af12\loch\f2 id = B.facid
\par \hich\af2\dbch\af12\loch\f2 WHERE F.name
\par \hich\af2\dbch\af12\loch\f2 IN (
\par \hich\af2\dbch\af12\loch\f2 'Tennis Court 1', 'Tennis Court 2'
\par \hich\af2\dbch\af12\loch\f2 )
\par \hich\af2\dbch\af12\loch\f2 ORDER BY M.firstname, M.surname
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* Q8: Produce a list of bookings on the day of 2012-09-14 which
\par \hich\af2\dbch\af12\loch\f2 will cost the member (or guest) more than $30. Remember that guests have
\par \hich\af2\dbch\af12\loch\f2 different costs to members (the listed costs are per half-hour 'slot'), and
\par \hich\af2\dbch\af12\loch\f2 the guest user's ID is always 0. Include in your output the name of the
\par \hich\af2\dbch\af12\loch\f2 facility, the name of the member formatted as a single column, and the cost.
\par \hich\af2\dbch\af12\loch\f2 Order by descending cost, and d\hich\af2\dbch\af12\loch\f2 o not use any subqueries. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 SELECT M.firstname || ' ' || M.surname as member, 
\par \tab \hich\af2\dbch\af12\loch\f2 F.name as facility, 
\par \tab \hich\af2\dbch\af12\loch\f2 case 
\par \tab \tab \hich\af2\dbch\af12\loch\f2 when M.memid = 0 then
\par \tab \tab \tab \hich\af2\dbch\af12\loch\f2 B.slots*F.guestcost
\par \tab \tab \hich\af2\dbch\af12\loch\f2 else
\par \tab \tab \tab \hich\af2\dbch\af12\loch\f2 B.slots*F.membercost
\par \tab \hich\af2\dbch\af12\loch\f2 end as cost
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 FROM Members M
\par \hich\af2\dbch\af12\loch\f2 INNER JOIN Bookings B
\par \hich\af2\dbch\af12\loch\f2 ON M.mem\hich\af2\dbch\af12\loch\f2 id=B.memid
\par \hich\af2\dbch\af12\loch\f2 INNER JOIN Facilities F
\par \hich\af2\dbch\af12\loch\f2 ON B.facid=F.facid
\par 
\par \hich\af2\dbch\af12\loch\f2 WHERE
\par \hich\af2\dbch\af12\loch\f2 B.starttime >= '2012-09-14' and 
\par \tab \tab \hich\af2\dbch\af12\loch\f2 B.starttime < '2012-09-15' and (
\par \tab \tab \tab \hich\af2\dbch\af12\loch\f2 (M.memid = 0 and B.slots*F.guestcost > 30) or
\par \tab \tab \tab \hich\af2\dbch\af12\loch\f2 (M.memid != 0 and B.slots*F.membercost > 30)
\par \tab \tab \hich\af2\dbch\af12\loch\f2 )
\par \hich\af2\dbch\af12\loch\f2 order by cost desc
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* Q9: This time, produce the same result as in Q8, but using a subquery. */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 SELECT member, facility, cost
\par \hich\af2\dbch\af12\loch\f2 FROM (
\par 
\par \hich\af2\dbch\af12\loch\f2 SELECT mems.firstname || ' ' || mems.surname AS member, facs.name AS facility,
\par \hich\af2\dbch\af12\loch\f2 CASE
\par \hich\af2\dbch\af12\loch\f2 WHEN mems.memid =0
\par \hich\af2\dbch\af12\loch\f2 THEN bks.slots * facs.guestco\hich\af2\dbch\af12\loch\f2 st
\par \hich\af2\dbch\af12\loch\f2 ELSE bks.slots * facs.membercost
\par \hich\af2\dbch\af12\loch\f2 END AS cost
\par \hich\af2\dbch\af12\loch\f2 FROM Members mems
\par \hich\af2\dbch\af12\loch\f2 INNER JOIN Bookings bks ON mems.memid = bks.memid
\par \hich\af2\dbch\af12\loch\f2 INNER JOIN Facilities facs ON bks.facid = facs.facid
\par \hich\af2\dbch\af12\loch\f2 WHERE bks.starttime >= '2012-09-14'
\par \hich\af2\dbch\af12\loch\f2 AND bks.starttime < '2012-09-15'
\par \hich\af2\dbch\af12\loch\f2 ) AS bookings
\par \hich\af2\dbch\af12\loch\f2 WHER\hich\af2\dbch\af12\loch\f2 E cost >30
\par \hich\af2\dbch\af12\loch\f2 ORDER BY cost DESC
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* PART 2: SQLite
\par \hich\af2\dbch\af12\loch\f2 /* We now want you to jump over to a local instance of the database on your machine. 
\par 
\par \hich\af2\dbch\af12\loch\f2 Copy and paste the LocalSQLConnection.py script into an empty Jupyter notebook, and run it. 
\par 
\par \hich\af2\dbch\af12\loch\f2 Make sure that the SQLFiles folder containing thes files is in your working directory, and
\par \hich\af2\dbch\af12\loch\f2 that you haven't changed the name of the .db file from 'sqlite\\db\\pythonsqlite'.
\par 
\par \hich\af2\dbch\af12\loch\f2 You should see the output from the initial query 'SELECT * FROM FACILITIES'.
\par 
\par \hich\af2\dbch\af12\loch\f2 Compl\hich\af2\dbch\af12\loch\f2 ete the remaining tasks in the Jupyter interface. If you struggle, feel free to go back
\par \hich\af2\dbch\af12\loch\f2 to the PHPMyAdmin interface as and when you need to. 
\par 
\par \hich\af2\dbch\af12\loch\f2 You'll need to paste your query into value of the 'query1' variable and run the code block again to get an output\hich\af2\dbch\af12\loch\f2 .
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 QUESTIONS:
\par \hich\af2\dbch\af12\loch\f2 /* Q10: Produce a list of facilities with a total revenue less than 1000.
\par \hich\af2\dbch\af12\loch\f2 The output of facility name and total revenue, sorted by revenue. Remember
\par \hich\af2\dbch\af12\loch\f2 that there's a different cost for guests and members! */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 select facs.name, sum(case\hich\af2\dbch\af12\loch\f2  
\par \tab \tab \hich\af2\dbch\af12\loch\f2 when memid = 0 then slots * facs.guestcost
\par \tab \tab \hich\af2\dbch\af12\loch\f2 else slots * membercost
\par \tab \hich\af2\dbch\af12\loch\f2 end) as revenue
\par \tab \hich\af2\dbch\af12\loch\f2 from Bookings bks
\par \tab \hich\af2\dbch\af12\loch\f2 inner join Facilities facs
\par \tab \tab \hich\af2\dbch\af12\loch\f2 on bks.facid = facs.facid
\par \tab \hich\af2\dbch\af12\loch\f2 group by facs.name
\par \tab \hich\af2\dbch\af12\loch\f2 having sum(case 
\par \tab \tab \hich\af2\dbch\af12\loch\f2 when memid = 0 then slots * facs.guestcost
\par \tab \tab \hich\af2\dbch\af12\loch\f2 else slots * membercost
\par \tab \hich\af2\dbch\af12\loch\f2 end) < 1000
\par \hich\af2\dbch\af12\loch\f2 order by revenue;
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 /* Q11: Produce a report of members and who recommended them in alphabetic surname,firstname order */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 select 
\par \hich\af2\dbch\af12\loch\f2 distinct Members.firstname, Members.surname, 
\par \hich\af2\dbch\af12\loch\f2 (select recommender.firstname || ' \hich\af2\dbch\af12\loch\f2 ' || recommender.surname from Members recommender where recommender.memid = Members.recommendedby)
\par \hich\af2\dbch\af12\loch\f2 from  Members 
\par \hich\af2\dbch\af12\loch\f2 order by Members.firstname, Members.surname;
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par \hich\af2\dbch\af12\loch\f2 /* Q12: Find the facilities with their usage by member, but not guests */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 select 
\par \hich\af2\dbch\af12\loch\f2 disti\hich\af2\dbch\af12\loch\f2 nct Members.firstname, Members.surname, 
\par \hich\af2\dbch\af12\loch\f2 (select recommender.firstname || ' ' || recommender.surname from Members recommender where recommender.memid = Members.recommendedby)
\par \hich\af2\dbch\af12\loch\f2 from  Members 
\par \hich\af2\dbch\af12\loch\f2 order by Members.firstname, Members.surname;
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par \hich\af2\dbch\af12\loch\f2 /* Q13: Find the facilities usage by month, but not guests */
\par 
\par }{\b\f2\fs22\ul\lang16393\langfe1042\highlight7\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 Output
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par }{\b\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 \hich\af2\dbch\af12\loch\f2 select 
\par \hich\af2\dbch\af12\loch\f2 distinct Members.firstname, Members.surname, 
\par \hich\af2\dbch\af12\loch\f2 (select recommender.firstname || ' ' || recommender.surname from Members recommender where recommender.memid = Members.recommendedb\hich\af2\dbch\af12\loch\f2 y)
\par \hich\af2\dbch\af12\loch\f2 from  Members 
\par \hich\af2\dbch\af12\loch\f2 order by Members.firstname, Members.surname;
\par }{\f2\fs22\lang16393\langfe1042\langnp16393\insrsid15033042 
\par 
\par 
\par 
\par 
\par }}